//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 8/9/2025 8:23:35 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ERDSQLDatabaseProjectModel", "FK__ADDRESS__CONSTIT__3F466844", "CONSTITUENT", RelationshipMultiplicity.ZeroOrOne, typeof(ERDSQLDatabaseProjectModel.CONSTITUENT), "ADDRESSES", RelationshipMultiplicity.Many, typeof(ERDSQLDatabaseProjectModel.ADDRESS), true)]
[assembly: EdmRelationshipAttribute("ERDSQLDatabaseProjectModel", "FK__EVENT__EVENT_CAT__49C3F6B7", "EVENTCATEGORY", RelationshipMultiplicity.ZeroOrOne, typeof(ERDSQLDatabaseProjectModel.EVENTCATEGORY), "EVENTs", RelationshipMultiplicity.Many, typeof(ERDSQLDatabaseProjectModel.EVENT), true)]
[assembly: EdmRelationshipAttribute("ERDSQLDatabaseProjectModel", "FK__INTERACTI__CONST__45F365D3", "CONSTITUENT", RelationshipMultiplicity.ZeroOrOne, typeof(ERDSQLDatabaseProjectModel.CONSTITUENT), "INTERACTIONs", RelationshipMultiplicity.Many, typeof(ERDSQLDatabaseProjectModel.INTERACTION), true)]
[assembly: EdmRelationshipAttribute("ERDSQLDatabaseProjectModel", "FK__INTERACTI__INTER__46E78A0C", "INTERACTIONTYPE", RelationshipMultiplicity.ZeroOrOne, typeof(ERDSQLDatabaseProjectModel.INTERACTIONTYPE), "INTERACTIONs", RelationshipMultiplicity.Many, typeof(ERDSQLDatabaseProjectModel.INTERACTION), true)]
[assembly: EdmRelationshipAttribute("ERDSQLDatabaseProjectModel", "FK__REVENUE__CONSTIT__4222D4EF", "CONSTITUENT", RelationshipMultiplicity.ZeroOrOne, typeof(ERDSQLDatabaseProjectModel.CONSTITUENT), "REVENUEs", RelationshipMultiplicity.Many, typeof(ERDSQLDatabaseProjectModel.REVENUE), true)]
[assembly: EdmRelationshipAttribute("ERDSQLDatabaseProjectModel", "FK__REVENUE__REVENUE__4316F928", "REVENUETYPE", RelationshipMultiplicity.ZeroOrOne, typeof(ERDSQLDatabaseProjectModel.REVENUETYPE), "REVENUEs", RelationshipMultiplicity.Many, typeof(ERDSQLDatabaseProjectModel.REVENUE), true)]

#endregion

namespace ERDSQLDatabaseProjectModel
{

    #region ERDSQLDatabaseProjectEntities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ERDSQLDatabaseProjectEntities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new ERDSQLDatabaseProjectEntities object.
        /// </summary>
        public ERDSQLDatabaseProjectEntities() :
                base(@"name=ERDSQLDatabaseProjectEntitiesConnectionString", "ERDSQLDatabaseProjectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new ERDSQLDatabaseProjectEntities object using the connection string found in the 'ERDSQLDatabaseProjectEntities' section of the application configuration file.
        /// </summary>
        public ERDSQLDatabaseProjectEntities(string connectionString) :
                base(connectionString, "ERDSQLDatabaseProjectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new ERDSQLDatabaseProjectEntities object.
        /// </summary>
        public ERDSQLDatabaseProjectEntities(EntityConnection connection) : base(connection, "ERDSQLDatabaseProjectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }


        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ADDRESS> ADDRESSES
        {
            get
            {
                if ((_ADDRESSES == null))
                {
                    _ADDRESSES = base.CreateObjectSet<ADDRESS>("ADDRESSES");
                }
                return _ADDRESSES;
            }
        }
        private ObjectSet<ADDRESS> _ADDRESSES;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CONSTITUENT> CONSTITUENTs
        {
            get
            {
                if ((_CONSTITUENTs == null))
                {
                    _CONSTITUENTs = base.CreateObjectSet<CONSTITUENT>("CONSTITUENTs");
                }
                return _CONSTITUENTs;
            }
        }
        private ObjectSet<CONSTITUENT> _CONSTITUENTs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EVENT> EVENTs
        {
            get
            {
                if ((_EVENTs == null))
                {
                    _EVENTs = base.CreateObjectSet<EVENT>("EVENTs");
                }
                return _EVENTs;
            }
        }
        private ObjectSet<EVENT> _EVENTs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EVENTCATEGORY> EVENTCATEGORIES
        {
            get
            {
                if ((_EVENTCATEGORIES == null))
                {
                    _EVENTCATEGORIES = base.CreateObjectSet<EVENTCATEGORY>("EVENTCATEGORIES");
                }
                return _EVENTCATEGORIES;
            }
        }
        private ObjectSet<EVENTCATEGORY> _EVENTCATEGORIES;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<INTERACTION> INTERACTIONs
        {
            get
            {
                if ((_INTERACTIONs == null))
                {
                    _INTERACTIONs = base.CreateObjectSet<INTERACTION>("INTERACTIONs");
                }
                return _INTERACTIONs;
            }
        }
        private ObjectSet<INTERACTION> _INTERACTIONs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<INTERACTIONTYPE> INTERACTIONTYPEs
        {
            get
            {
                if ((_INTERACTIONTYPEs == null))
                {
                    _INTERACTIONTYPEs = base.CreateObjectSet<INTERACTIONTYPE>("INTERACTIONTYPEs");
                }
                return _INTERACTIONTYPEs;
            }
        }
        private ObjectSet<INTERACTIONTYPE> _INTERACTIONTYPEs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REVENUE> REVENUEs
        {
            get
            {
                if ((_REVENUEs == null))
                {
                    _REVENUEs = base.CreateObjectSet<REVENUE>("REVENUEs");
                }
                return _REVENUEs;
            }
        }
        private ObjectSet<REVENUE> _REVENUEs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REVENUETYPE> REVENUETYPEs
        {
            get
            {
                if ((_REVENUETYPEs == null))
                {
                    _REVENUETYPEs = base.CreateObjectSet<REVENUETYPE>("REVENUETYPEs");
                }
                return _REVENUETYPEs;
            }
        }
        private ObjectSet<REVENUETYPE> _REVENUETYPEs;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the ADDRESSES EntitySet.
        /// </summary>
        public void AddToADDRESSES(ADDRESS aDDRESS)
        {
            base.AddObject("ADDRESSES", aDDRESS);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CONSTITUENTs EntitySet.
        /// </summary>
        public void AddToCONSTITUENTs(CONSTITUENT cONSTITUENT)
        {
            base.AddObject("CONSTITUENTs", cONSTITUENT);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EVENTs EntitySet.
        /// </summary>
        public void AddToEVENTs(EVENT eVENT)
        {
            base.AddObject("EVENTs", eVENT);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EVENTCATEGORIES EntitySet.
        /// </summary>
        public void AddToEVENTCATEGORIES(EVENTCATEGORY eVENTCATEGORY)
        {
            base.AddObject("EVENTCATEGORIES", eVENTCATEGORY);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the INTERACTIONs EntitySet.
        /// </summary>
        public void AddToINTERACTIONs(INTERACTION iNTERACTION)
        {
            base.AddObject("INTERACTIONs", iNTERACTION);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the INTERACTIONTYPEs EntitySet.
        /// </summary>
        public void AddToINTERACTIONTYPEs(INTERACTIONTYPE iNTERACTIONTYPE)
        {
            base.AddObject("INTERACTIONTYPEs", iNTERACTIONTYPE);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the REVENUEs EntitySet.
        /// </summary>
        public void AddToREVENUEs(REVENUE rEVENUE)
        {
            base.AddObject("REVENUEs", rEVENUE);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the REVENUETYPEs EntitySet.
        /// </summary>
        public void AddToREVENUETYPEs(REVENUETYPE rEVENUETYPE)
        {
            base.AddObject("REVENUETYPEs", rEVENUETYPE);
        }

        #endregion
    }

    #endregion
}

namespace ERDSQLDatabaseProjectModel
{

    /// <summary>
    /// There are no comments for ERDSQLDatabaseProjectModel.ADDRESS in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="ERDSQLDatabaseProjectModel", Name="ADDRESS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ADDRESS : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ADDRESS object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        public static ADDRESS CreateADDRESS(global::System.Guid iD)
        {
            ADDRESS aDDRESS = new ADDRESS();
            aDDRESS.ID = iD;
            return aDDRESS;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.Guid ID
        {
            get
            {
                global::System.Guid value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private global::System.Guid _ID;
        partial void OnGetID(ref global::System.Guid value);
        partial void OnIDChanging(ref global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for CONSTITUENTID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.Guid? CONSTITUENTID
        {
            get
            {
                global::System.Guid? value = _CONSTITUENTID;
                OnGetCONSTITUENTID(ref value);
                return value;
            }
            set
            {
                if (_CONSTITUENTID != value)
                {
                  OnCONSTITUENTIDChanging(ref value);
                  ReportPropertyChanging("CONSTITUENTID");
                  _CONSTITUENTID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CONSTITUENTID");
                  OnCONSTITUENTIDChanged();
              }
            }
        }
        private global::System.Guid? _CONSTITUENTID;
        partial void OnGetCONSTITUENTID(ref global::System.Guid? value);
        partial void OnCONSTITUENTIDChanging(ref global::System.Guid? value);
        partial void OnCONSTITUENTIDChanged();
    
        /// <summary>
        /// There are no comments for STREET in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string STREET
        {
            get
            {
                string value = _STREET;
                OnGetSTREET(ref value);
                return value;
            }
            set
            {
                if (_STREET != value)
                {
                  OnSTREETChanging(ref value);
                  ReportPropertyChanging("STREET");
                  _STREET = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("STREET");
                  OnSTREETChanged();
              }
            }
        }
        private string _STREET;
        partial void OnGetSTREET(ref string value);
        partial void OnSTREETChanging(ref string value);
        partial void OnSTREETChanged();
    
        /// <summary>
        /// There are no comments for CITY in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CITY
        {
            get
            {
                string value = _CITY;
                OnGetCITY(ref value);
                return value;
            }
            set
            {
                if (_CITY != value)
                {
                  OnCITYChanging(ref value);
                  ReportPropertyChanging("CITY");
                  _CITY = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CITY");
                  OnCITYChanged();
              }
            }
        }
        private string _CITY;
        partial void OnGetCITY(ref string value);
        partial void OnCITYChanging(ref string value);
        partial void OnCITYChanged();
    
        /// <summary>
        /// There are no comments for STATE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string STATE
        {
            get
            {
                string value = _STATE;
                OnGetSTATE(ref value);
                return value;
            }
            set
            {
                if (_STATE != value)
                {
                  OnSTATEChanging(ref value);
                  ReportPropertyChanging("STATE");
                  _STATE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("STATE");
                  OnSTATEChanged();
              }
            }
        }
        private string _STATE;
        partial void OnGetSTATE(ref string value);
        partial void OnSTATEChanging(ref string value);
        partial void OnSTATEChanged();
    
        /// <summary>
        /// There are no comments for ZIP in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ZIP
        {
            get
            {
                string value = _ZIP;
                OnGetZIP(ref value);
                return value;
            }
            set
            {
                if (_ZIP != value)
                {
                  OnZIPChanging(ref value);
                  ReportPropertyChanging("ZIP");
                  _ZIP = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ZIP");
                  OnZIPChanged();
              }
            }
        }
        private string _ZIP;
        partial void OnGetZIP(ref string value);
        partial void OnZIPChanging(ref string value);
        partial void OnZIPChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CONSTITUENT in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERDSQLDatabaseProjectModel", "FK__ADDRESS__CONSTIT__3F466844", "CONSTITUENT")]
        public virtual CONSTITUENT CONSTITUENT
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CONSTITUENT>("ERDSQLDatabaseProjectModel.FK__ADDRESS__CONSTIT__3F466844", "CONSTITUENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CONSTITUENT>("ERDSQLDatabaseProjectModel.FK__ADDRESS__CONSTIT__3F466844", "CONSTITUENT").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CONSTITUENT in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CONSTITUENT> CONSTITUENTReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CONSTITUENT>("ERDSQLDatabaseProjectModel.FK__ADDRESS__CONSTIT__3F466844", "CONSTITUENT");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CONSTITUENT>("ERDSQLDatabaseProjectModel.FK__ADDRESS__CONSTIT__3F466844", "CONSTITUENT", value);
                }
                else
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CONSTITUENT>("ERDSQLDatabaseProjectModel.FK__ADDRESS__CONSTIT__3F466844", "CONSTITUENT").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for ERDSQLDatabaseProjectModel.CONSTITUENT in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="ERDSQLDatabaseProjectModel", Name="CONSTITUENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CONSTITUENT : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CONSTITUENT object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        public static CONSTITUENT CreateCONSTITUENT(global::System.Guid iD)
        {
            CONSTITUENT cONSTITUENT = new CONSTITUENT();
            cONSTITUENT.ID = iD;
            return cONSTITUENT;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.Guid ID
        {
            get
            {
                global::System.Guid value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private global::System.Guid _ID;
        partial void OnGetID(ref global::System.Guid value);
        partial void OnIDChanging(ref global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for FIRSTNAME in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FIRSTNAME
        {
            get
            {
                string value = _FIRSTNAME;
                OnGetFIRSTNAME(ref value);
                return value;
            }
            set
            {
                if (_FIRSTNAME != value)
                {
                  OnFIRSTNAMEChanging(ref value);
                  ReportPropertyChanging("FIRSTNAME");
                  _FIRSTNAME = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FIRSTNAME");
                  OnFIRSTNAMEChanged();
              }
            }
        }
        private string _FIRSTNAME;
        partial void OnGetFIRSTNAME(ref string value);
        partial void OnFIRSTNAMEChanging(ref string value);
        partial void OnFIRSTNAMEChanged();
    
        /// <summary>
        /// There are no comments for LASTNAME in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string LASTNAME
        {
            get
            {
                string value = _LASTNAME;
                OnGetLASTNAME(ref value);
                return value;
            }
            set
            {
                if (_LASTNAME != value)
                {
                  OnLASTNAMEChanging(ref value);
                  ReportPropertyChanging("LASTNAME");
                  _LASTNAME = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LASTNAME");
                  OnLASTNAMEChanged();
              }
            }
        }
        private string _LASTNAME;
        partial void OnGetLASTNAME(ref string value);
        partial void OnLASTNAMEChanging(ref string value);
        partial void OnLASTNAMEChanged();
    
        /// <summary>
        /// There are no comments for TYPE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TYPE
        {
            get
            {
                string value = _TYPE;
                OnGetTYPE(ref value);
                return value;
            }
            set
            {
                if (_TYPE != value)
                {
                  OnTYPEChanging(ref value);
                  ReportPropertyChanging("TYPE");
                  _TYPE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TYPE");
                  OnTYPEChanged();
              }
            }
        }
        private string _TYPE;
        partial void OnGetTYPE(ref string value);
        partial void OnTYPEChanging(ref string value);
        partial void OnTYPEChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ADDRESSES in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERDSQLDatabaseProjectModel", "FK__ADDRESS__CONSTIT__3F466844", "ADDRESSES")]
        public virtual EntityCollection<ADDRESS> ADDRESSES
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ADDRESS>("ERDSQLDatabaseProjectModel.FK__ADDRESS__CONSTIT__3F466844", "ADDRESSES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ADDRESS>("ERDSQLDatabaseProjectModel.FK__ADDRESS__CONSTIT__3F466844", "ADDRESSES", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for INTERACTIONs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERDSQLDatabaseProjectModel", "FK__INTERACTI__CONST__45F365D3", "INTERACTIONs")]
        public virtual EntityCollection<INTERACTION> INTERACTIONs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<INTERACTION>("ERDSQLDatabaseProjectModel.FK__INTERACTI__CONST__45F365D3", "INTERACTIONs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<INTERACTION>("ERDSQLDatabaseProjectModel.FK__INTERACTI__CONST__45F365D3", "INTERACTIONs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for REVENUEs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERDSQLDatabaseProjectModel", "FK__REVENUE__CONSTIT__4222D4EF", "REVENUEs")]
        public virtual EntityCollection<REVENUE> REVENUEs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<REVENUE>("ERDSQLDatabaseProjectModel.FK__REVENUE__CONSTIT__4222D4EF", "REVENUEs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<REVENUE>("ERDSQLDatabaseProjectModel.FK__REVENUE__CONSTIT__4222D4EF", "REVENUEs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for ERDSQLDatabaseProjectModel.EVENT in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="ERDSQLDatabaseProjectModel", Name="EVENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EVENT : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new EVENT object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        public static EVENT CreateEVENT(global::System.Guid iD)
        {
            EVENT eVENT = new EVENT();
            eVENT.ID = iD;
            return eVENT;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.Guid ID
        {
            get
            {
                global::System.Guid value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private global::System.Guid _ID;
        partial void OnGetID(ref global::System.Guid value);
        partial void OnIDChanging(ref global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for EVENTCATEGORYID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? EVENTCATEGORYID
        {
            get
            {
                int? value = _EVENTCATEGORYID;
                OnGetEVENTCATEGORYID(ref value);
                return value;
            }
            set
            {
                if (_EVENTCATEGORYID != value)
                {
                  OnEVENTCATEGORYIDChanging(ref value);
                  ReportPropertyChanging("EVENTCATEGORYID");
                  _EVENTCATEGORYID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EVENTCATEGORYID");
                  OnEVENTCATEGORYIDChanged();
              }
            }
        }
        private int? _EVENTCATEGORYID;
        partial void OnGetEVENTCATEGORYID(ref int? value);
        partial void OnEVENTCATEGORYIDChanging(ref int? value);
        partial void OnEVENTCATEGORYIDChanged();
    
        /// <summary>
        /// There are no comments for NAME in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string NAME
        {
            get
            {
                string value = _NAME;
                OnGetNAME(ref value);
                return value;
            }
            set
            {
                if (_NAME != value)
                {
                  OnNAMEChanging(ref value);
                  ReportPropertyChanging("NAME");
                  _NAME = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NAME");
                  OnNAMEChanged();
              }
            }
        }
        private string _NAME;
        partial void OnGetNAME(ref string value);
        partial void OnNAMEChanging(ref string value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// There are no comments for EVENTDATE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? EVENTDATE
        {
            get
            {
                global::System.DateTime? value = _EVENTDATE;
                OnGetEVENTDATE(ref value);
                return value;
            }
            set
            {
                if (_EVENTDATE != value)
                {
                  OnEVENTDATEChanging(ref value);
                  ReportPropertyChanging("EVENTDATE");
                  _EVENTDATE = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EVENTDATE");
                  OnEVENTDATEChanged();
              }
            }
        }
        private global::System.DateTime? _EVENTDATE;
        partial void OnGetEVENTDATE(ref global::System.DateTime? value);
        partial void OnEVENTDATEChanging(ref global::System.DateTime? value);
        partial void OnEVENTDATEChanged();
    
        /// <summary>
        /// There are no comments for LOCATION in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string LOCATION
        {
            get
            {
                string value = _LOCATION;
                OnGetLOCATION(ref value);
                return value;
            }
            set
            {
                if (_LOCATION != value)
                {
                  OnLOCATIONChanging(ref value);
                  ReportPropertyChanging("LOCATION");
                  _LOCATION = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LOCATION");
                  OnLOCATIONChanged();
              }
            }
        }
        private string _LOCATION;
        partial void OnGetLOCATION(ref string value);
        partial void OnLOCATIONChanging(ref string value);
        partial void OnLOCATIONChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for EVENTCATEGORY in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERDSQLDatabaseProjectModel", "FK__EVENT__EVENT_CAT__49C3F6B7", "EVENTCATEGORY")]
        public virtual EVENTCATEGORY EVENTCATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EVENTCATEGORY>("ERDSQLDatabaseProjectModel.FK__EVENT__EVENT_CAT__49C3F6B7", "EVENTCATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EVENTCATEGORY>("ERDSQLDatabaseProjectModel.FK__EVENT__EVENT_CAT__49C3F6B7", "EVENTCATEGORY").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for EVENTCATEGORY in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EVENTCATEGORY> EVENTCATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EVENTCATEGORY>("ERDSQLDatabaseProjectModel.FK__EVENT__EVENT_CAT__49C3F6B7", "EVENTCATEGORY");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<EVENTCATEGORY>("ERDSQLDatabaseProjectModel.FK__EVENT__EVENT_CAT__49C3F6B7", "EVENTCATEGORY", value);
                }
                else
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<EVENTCATEGORY>("ERDSQLDatabaseProjectModel.FK__EVENT__EVENT_CAT__49C3F6B7", "EVENTCATEGORY").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for ERDSQLDatabaseProjectModel.EVENTCATEGORY in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="ERDSQLDatabaseProjectModel", Name="EVENTCATEGORY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EVENTCATEGORY : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new EVENTCATEGORY object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        public static EVENTCATEGORY CreateEVENTCATEGORY(int iD)
        {
            EVENTCATEGORY eVENTCATEGORY = new EVENTCATEGORY();
            eVENTCATEGORY.ID = iD;
            return eVENTCATEGORY;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ID
        {
            get
            {
                int value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private int _ID;
        partial void OnGetID(ref int value);
        partial void OnIDChanging(ref int value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for NAME in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string NAME
        {
            get
            {
                string value = _NAME;
                OnGetNAME(ref value);
                return value;
            }
            set
            {
                if (_NAME != value)
                {
                  OnNAMEChanging(ref value);
                  ReportPropertyChanging("NAME");
                  _NAME = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NAME");
                  OnNAMEChanged();
              }
            }
        }
        private string _NAME;
        partial void OnGetNAME(ref string value);
        partial void OnNAMEChanging(ref string value);
        partial void OnNAMEChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for EVENTs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERDSQLDatabaseProjectModel", "FK__EVENT__EVENT_CAT__49C3F6B7", "EVENTs")]
        public virtual EntityCollection<EVENT> EVENTs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<EVENT>("ERDSQLDatabaseProjectModel.FK__EVENT__EVENT_CAT__49C3F6B7", "EVENTs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<EVENT>("ERDSQLDatabaseProjectModel.FK__EVENT__EVENT_CAT__49C3F6B7", "EVENTs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for ERDSQLDatabaseProjectModel.INTERACTION in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="ERDSQLDatabaseProjectModel", Name="INTERACTION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class INTERACTION : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new INTERACTION object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        public static INTERACTION CreateINTERACTION(global::System.Guid iD)
        {
            INTERACTION iNTERACTION = new INTERACTION();
            iNTERACTION.ID = iD;
            return iNTERACTION;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.Guid ID
        {
            get
            {
                global::System.Guid value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private global::System.Guid _ID;
        partial void OnGetID(ref global::System.Guid value);
        partial void OnIDChanging(ref global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for CONSTITUENTID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.Guid? CONSTITUENTID
        {
            get
            {
                global::System.Guid? value = _CONSTITUENTID;
                OnGetCONSTITUENTID(ref value);
                return value;
            }
            set
            {
                if (_CONSTITUENTID != value)
                {
                  OnCONSTITUENTIDChanging(ref value);
                  ReportPropertyChanging("CONSTITUENTID");
                  _CONSTITUENTID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CONSTITUENTID");
                  OnCONSTITUENTIDChanged();
              }
            }
        }
        private global::System.Guid? _CONSTITUENTID;
        partial void OnGetCONSTITUENTID(ref global::System.Guid? value);
        partial void OnCONSTITUENTIDChanging(ref global::System.Guid? value);
        partial void OnCONSTITUENTIDChanged();
    
        /// <summary>
        /// There are no comments for INTERACTIONTYPEID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? INTERACTIONTYPEID
        {
            get
            {
                int? value = _INTERACTIONTYPEID;
                OnGetINTERACTIONTYPEID(ref value);
                return value;
            }
            set
            {
                if (_INTERACTIONTYPEID != value)
                {
                  OnINTERACTIONTYPEIDChanging(ref value);
                  ReportPropertyChanging("INTERACTIONTYPEID");
                  _INTERACTIONTYPEID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("INTERACTIONTYPEID");
                  OnINTERACTIONTYPEIDChanged();
              }
            }
        }
        private int? _INTERACTIONTYPEID;
        partial void OnGetINTERACTIONTYPEID(ref int? value);
        partial void OnINTERACTIONTYPEIDChanging(ref int? value);
        partial void OnINTERACTIONTYPEIDChanged();
    
        /// <summary>
        /// There are no comments for DATEOCCURRED in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DATEOCCURRED
        {
            get
            {
                global::System.DateTime? value = _DATEOCCURRED;
                OnGetDATEOCCURRED(ref value);
                return value;
            }
            set
            {
                if (_DATEOCCURRED != value)
                {
                  OnDATEOCCURREDChanging(ref value);
                  ReportPropertyChanging("DATEOCCURRED");
                  _DATEOCCURRED = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DATEOCCURRED");
                  OnDATEOCCURREDChanged();
              }
            }
        }
        private global::System.DateTime? _DATEOCCURRED;
        partial void OnGetDATEOCCURRED(ref global::System.DateTime? value);
        partial void OnDATEOCCURREDChanging(ref global::System.DateTime? value);
        partial void OnDATEOCCURREDChanged();
    
        /// <summary>
        /// There are no comments for NOTES in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string NOTES
        {
            get
            {
                string value = _NOTES;
                OnGetNOTES(ref value);
                return value;
            }
            set
            {
                if (_NOTES != value)
                {
                  OnNOTESChanging(ref value);
                  ReportPropertyChanging("NOTES");
                  _NOTES = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NOTES");
                  OnNOTESChanged();
              }
            }
        }
        private string _NOTES;
        partial void OnGetNOTES(ref string value);
        partial void OnNOTESChanging(ref string value);
        partial void OnNOTESChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CONSTITUENT in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERDSQLDatabaseProjectModel", "FK__INTERACTI__CONST__45F365D3", "CONSTITUENT")]
        public virtual CONSTITUENT CONSTITUENT
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CONSTITUENT>("ERDSQLDatabaseProjectModel.FK__INTERACTI__CONST__45F365D3", "CONSTITUENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CONSTITUENT>("ERDSQLDatabaseProjectModel.FK__INTERACTI__CONST__45F365D3", "CONSTITUENT").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CONSTITUENT in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CONSTITUENT> CONSTITUENTReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CONSTITUENT>("ERDSQLDatabaseProjectModel.FK__INTERACTI__CONST__45F365D3", "CONSTITUENT");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CONSTITUENT>("ERDSQLDatabaseProjectModel.FK__INTERACTI__CONST__45F365D3", "CONSTITUENT", value);
                }
                else
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CONSTITUENT>("ERDSQLDatabaseProjectModel.FK__INTERACTI__CONST__45F365D3", "CONSTITUENT").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for INTERACTIONTYPE in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERDSQLDatabaseProjectModel", "FK__INTERACTI__INTER__46E78A0C", "INTERACTIONTYPE")]
        public virtual INTERACTIONTYPE INTERACTIONTYPE
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<INTERACTIONTYPE>("ERDSQLDatabaseProjectModel.FK__INTERACTI__INTER__46E78A0C", "INTERACTIONTYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<INTERACTIONTYPE>("ERDSQLDatabaseProjectModel.FK__INTERACTI__INTER__46E78A0C", "INTERACTIONTYPE").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for INTERACTIONTYPE in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<INTERACTIONTYPE> INTERACTIONTYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<INTERACTIONTYPE>("ERDSQLDatabaseProjectModel.FK__INTERACTI__INTER__46E78A0C", "INTERACTIONTYPE");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<INTERACTIONTYPE>("ERDSQLDatabaseProjectModel.FK__INTERACTI__INTER__46E78A0C", "INTERACTIONTYPE", value);
                }
                else
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<INTERACTIONTYPE>("ERDSQLDatabaseProjectModel.FK__INTERACTI__INTER__46E78A0C", "INTERACTIONTYPE").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for ERDSQLDatabaseProjectModel.INTERACTIONTYPE in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="ERDSQLDatabaseProjectModel", Name="INTERACTIONTYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class INTERACTIONTYPE : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new INTERACTIONTYPE object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        public static INTERACTIONTYPE CreateINTERACTIONTYPE(int iD)
        {
            INTERACTIONTYPE iNTERACTIONTYPE = new INTERACTIONTYPE();
            iNTERACTIONTYPE.ID = iD;
            return iNTERACTIONTYPE;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ID
        {
            get
            {
                int value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private int _ID;
        partial void OnGetID(ref int value);
        partial void OnIDChanging(ref int value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for NAME in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string NAME
        {
            get
            {
                string value = _NAME;
                OnGetNAME(ref value);
                return value;
            }
            set
            {
                if (_NAME != value)
                {
                  OnNAMEChanging(ref value);
                  ReportPropertyChanging("NAME");
                  _NAME = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NAME");
                  OnNAMEChanged();
              }
            }
        }
        private string _NAME;
        partial void OnGetNAME(ref string value);
        partial void OnNAMEChanging(ref string value);
        partial void OnNAMEChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for INTERACTIONs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERDSQLDatabaseProjectModel", "FK__INTERACTI__INTER__46E78A0C", "INTERACTIONs")]
        public virtual EntityCollection<INTERACTION> INTERACTIONs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<INTERACTION>("ERDSQLDatabaseProjectModel.FK__INTERACTI__INTER__46E78A0C", "INTERACTIONs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<INTERACTION>("ERDSQLDatabaseProjectModel.FK__INTERACTI__INTER__46E78A0C", "INTERACTIONs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for ERDSQLDatabaseProjectModel.REVENUE in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="ERDSQLDatabaseProjectModel", Name="REVENUE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REVENUE : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new REVENUE object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        public static REVENUE CreateREVENUE(global::System.Guid iD)
        {
            REVENUE rEVENUE = new REVENUE();
            rEVENUE.ID = iD;
            return rEVENUE;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.Guid ID
        {
            get
            {
                global::System.Guid value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private global::System.Guid _ID;
        partial void OnGetID(ref global::System.Guid value);
        partial void OnIDChanging(ref global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for CONSTITUENTID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.Guid? CONSTITUENTID
        {
            get
            {
                global::System.Guid? value = _CONSTITUENTID;
                OnGetCONSTITUENTID(ref value);
                return value;
            }
            set
            {
                if (_CONSTITUENTID != value)
                {
                  OnCONSTITUENTIDChanging(ref value);
                  ReportPropertyChanging("CONSTITUENTID");
                  _CONSTITUENTID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CONSTITUENTID");
                  OnCONSTITUENTIDChanged();
              }
            }
        }
        private global::System.Guid? _CONSTITUENTID;
        partial void OnGetCONSTITUENTID(ref global::System.Guid? value);
        partial void OnCONSTITUENTIDChanging(ref global::System.Guid? value);
        partial void OnCONSTITUENTIDChanged();
    
        /// <summary>
        /// There are no comments for REVENUETYPEID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? REVENUETYPEID
        {
            get
            {
                int? value = _REVENUETYPEID;
                OnGetREVENUETYPEID(ref value);
                return value;
            }
            set
            {
                if (_REVENUETYPEID != value)
                {
                  OnREVENUETYPEIDChanging(ref value);
                  ReportPropertyChanging("REVENUETYPEID");
                  _REVENUETYPEID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("REVENUETYPEID");
                  OnREVENUETYPEIDChanged();
              }
            }
        }
        private int? _REVENUETYPEID;
        partial void OnGetREVENUETYPEID(ref int? value);
        partial void OnREVENUETYPEIDChanging(ref int? value);
        partial void OnREVENUETYPEIDChanged();
    
        /// <summary>
        /// There are no comments for AMOUNT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? AMOUNT
        {
            get
            {
                decimal? value = _AMOUNT;
                OnGetAMOUNT(ref value);
                return value;
            }
            set
            {
                if (_AMOUNT != value)
                {
                  OnAMOUNTChanging(ref value);
                  ReportPropertyChanging("AMOUNT");
                  _AMOUNT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AMOUNT");
                  OnAMOUNTChanged();
              }
            }
        }
        private decimal? _AMOUNT;
        partial void OnGetAMOUNT(ref decimal? value);
        partial void OnAMOUNTChanging(ref decimal? value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// There are no comments for DATERECEIVED in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DATERECEIVED
        {
            get
            {
                global::System.DateTime? value = _DATERECEIVED;
                OnGetDATERECEIVED(ref value);
                return value;
            }
            set
            {
                if (_DATERECEIVED != value)
                {
                  OnDATERECEIVEDChanging(ref value);
                  ReportPropertyChanging("DATERECEIVED");
                  _DATERECEIVED = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DATERECEIVED");
                  OnDATERECEIVEDChanged();
              }
            }
        }
        private global::System.DateTime? _DATERECEIVED;
        partial void OnGetDATERECEIVED(ref global::System.DateTime? value);
        partial void OnDATERECEIVEDChanging(ref global::System.DateTime? value);
        partial void OnDATERECEIVEDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CONSTITUENT in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERDSQLDatabaseProjectModel", "FK__REVENUE__CONSTIT__4222D4EF", "CONSTITUENT")]
        public virtual CONSTITUENT CONSTITUENT
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CONSTITUENT>("ERDSQLDatabaseProjectModel.FK__REVENUE__CONSTIT__4222D4EF", "CONSTITUENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CONSTITUENT>("ERDSQLDatabaseProjectModel.FK__REVENUE__CONSTIT__4222D4EF", "CONSTITUENT").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CONSTITUENT in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CONSTITUENT> CONSTITUENTReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CONSTITUENT>("ERDSQLDatabaseProjectModel.FK__REVENUE__CONSTIT__4222D4EF", "CONSTITUENT");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CONSTITUENT>("ERDSQLDatabaseProjectModel.FK__REVENUE__CONSTIT__4222D4EF", "CONSTITUENT", value);
                }
                else
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CONSTITUENT>("ERDSQLDatabaseProjectModel.FK__REVENUE__CONSTIT__4222D4EF", "CONSTITUENT").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for REVENUETYPE in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERDSQLDatabaseProjectModel", "FK__REVENUE__REVENUE__4316F928", "REVENUETYPE")]
        public virtual REVENUETYPE REVENUETYPE
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<REVENUETYPE>("ERDSQLDatabaseProjectModel.FK__REVENUE__REVENUE__4316F928", "REVENUETYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<REVENUETYPE>("ERDSQLDatabaseProjectModel.FK__REVENUE__REVENUE__4316F928", "REVENUETYPE").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for REVENUETYPE in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REVENUETYPE> REVENUETYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<REVENUETYPE>("ERDSQLDatabaseProjectModel.FK__REVENUE__REVENUE__4316F928", "REVENUETYPE");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<REVENUETYPE>("ERDSQLDatabaseProjectModel.FK__REVENUE__REVENUE__4316F928", "REVENUETYPE", value);
                }
                else
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<REVENUETYPE>("ERDSQLDatabaseProjectModel.FK__REVENUE__REVENUE__4316F928", "REVENUETYPE").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for ERDSQLDatabaseProjectModel.REVENUETYPE in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="ERDSQLDatabaseProjectModel", Name="REVENUETYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REVENUETYPE : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new REVENUETYPE object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        public static REVENUETYPE CreateREVENUETYPE(int iD)
        {
            REVENUETYPE rEVENUETYPE = new REVENUETYPE();
            rEVENUETYPE.ID = iD;
            return rEVENUETYPE;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ID
        {
            get
            {
                int value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private int _ID;
        partial void OnGetID(ref int value);
        partial void OnIDChanging(ref int value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for NAME in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string NAME
        {
            get
            {
                string value = _NAME;
                OnGetNAME(ref value);
                return value;
            }
            set
            {
                if (_NAME != value)
                {
                  OnNAMEChanging(ref value);
                  ReportPropertyChanging("NAME");
                  _NAME = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NAME");
                  OnNAMEChanged();
              }
            }
        }
        private string _NAME;
        partial void OnGetNAME(ref string value);
        partial void OnNAMEChanging(ref string value);
        partial void OnNAMEChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for REVENUEs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERDSQLDatabaseProjectModel", "FK__REVENUE__REVENUE__4316F928", "REVENUEs")]
        public virtual EntityCollection<REVENUE> REVENUEs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<REVENUE>("ERDSQLDatabaseProjectModel.FK__REVENUE__REVENUE__4316F928", "REVENUEs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<REVENUE>("ERDSQLDatabaseProjectModel.FK__REVENUE__REVENUE__4316F928", "REVENUEs", value);
                }
            }
        }

        #endregion
    }

}
